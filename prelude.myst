-- prelude.myst - The built-in functions for Myst
-- These are imported as 'safe', which means that
-- all calls to JS functions need to be wrapped,

import ./runtime
-- import './runtime' as rt -- Explicitly call runtime fns

-- Arithmetic Functions
let add = rt.add       -- +
let sub = rt.sub       -- -
let mult = rt.mult     -- *
let div = rt.div       -- /
let concat = rt.concat -- ++

let inc x = x + 1
let dec x = x - 1

-- Logical Functions
let eq = rt.eq   -- ==
let neq = rt.neq -- !=
let lte = rt.lte -- <=
let gte = rt.gte -- >=
let lt = rt.lt   -- <
let gt = rt.gt   -- >

-- Box
let ptr = rt.ptr

-- Basic mori functions
let asMystObj o =
    if rt.isJSObject o
       then I.Map o
       else if rt.isJSArray o
               then I.Vector o
               else o

let assoc o k v =
    (rt.getRaw (asMystObj o) 'set') k v

let dissoc o k =
    (rt.getRaw (asMystObj o) 'remove') k

let len = rt.len

let isMap o = rt.isJSObject o || rt.isMap o

let isVector o = rt.isJSArray o || rt.isVector o

-- Transform objects into JavaScript objects
let toJs x = rt.jsify x
